services:
  db:
    image: postgres:17-alpine
    container_name: postgres_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}"]
      interval: 5s
      retries: 5

  ldap:
    image: osixia/openldap:latest
    container_name: ldap_server
    environment:
      LDAP_ORGANISATION: Example
      LDAP_DOMAIN: example.com
      LDAP_ADMIN_PASSWORD: ${LDAP_ADMIN_PASSWORD}
      LDAP_BIND_DN: ${LDAP_BIND_DN}
      # LDAP_TLS_VERIFY_CLIENT: never
    volumes:
      - ldap_data:/var/lib/ldap
      - ldap_config:/etc/ldap/slapd.d
      - ./ldap/01-test-users.ldif:/ldif/01-test-users.ldif
      - ./ldap/init-ldap.sh:/init-ldap.sh
    ports:
      - "389:389"
      - "636:636"
    networks:
      - net
    entrypoint: ["/bin/bash", "/init-ldap.sh"]

  phpldapadmin:
    image: osixia/phpldapadmin:latest
    container_name: ldap_admin
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: ldap_server
      PHPLDAPADMIN_HTTPS: "false"
    ports:
      - "8082:80"
    networks:
      - net

  backend:
    build:
      context: .
      dockerfile: ./DRF/Dockerfile.backend
    container_name: django_backend
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn laundry_booking.wsgi:application --bind 0.0.0.0:8000"
    env_file:
      - .env
    volumes:
      - ./DRF:/app
      - ./staticfiles:/app/staticfiles
    depends_on:
        db:
          condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - net

  frontend:
    build:
      context: .
      dockerfile: ./REACT/booking-frontend/Dockerfile.frontend
    container_name: react_frontend
    volumes:
      - react_build:/app/build
    ports:
      - "3443:80"
    networks:
      - net

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
      - phpldapadmin
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - react_build:/usr/share/nginx/html
      - ./staticfiles:/django_static
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    networks:
      - net
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    # entrypoint: /bin/sh -c "trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew --webroot -w /var/www/certbot; done"
    depends_on:
      - nginx
    networks:
      - net

volumes:
  react_build:
  postgres_data:
  ldap_data:
  ldap_config:


networks:
  net:
